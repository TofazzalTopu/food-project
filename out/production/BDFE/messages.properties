
message.title=Message
message.invalid=Invalid {0}
message.error=error {0}
message.save.success={0} saved successfully
message.save.fail={0} not saved
message.update.success={0} updated successfully
message.update.fail={0} not update
message.delete.success={0} deleted successfully
message.delete.fail=This {0} is already used
message.already.deleted={0} not exits or already deleted by someone
message.password.recover=Please check inbox of your email/mobile phone


default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]
default.invalid.url.message=Property [{0}] of class [{1}] with value [{2}] is not a valid URL
default.invalid.creditCard.message=Property [{0}] of class [{1}] with value [{2}] is not a valid credit card number
default.invalid.email.message=Property [{0}] of class [{1}] with value [{2}] is not a valid e-mail address
default.invalid.range.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]
default.invalid.size.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]
default.invalid.max.message=Property [{0}] of class [{1}] with value [{2}] exceeds maximum value [{3}]
default.invalid.min.message=Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]
default.invalid.max.size.message=Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]
default.invalid.min.size.message=Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]
default.invalid.validator.message=Property [{0}] of class [{1}] with value [{2}] does not pass custom validation
default.not.inlist.message=Property [{0}] of class [{1}] with value [{2}] is not contained within the list [{3}]
default.blank.message=Property [{0}] of class [{1}] cannot be blank
default.not.equal.message=Property [{0}] of class [{1}] with value [{2}] cannot equal [{3}]
default.null.message=Property [{0}] of class [{1}] cannot be null
default.not.unique.message=Property [{0}] of class [{1}] with value [{2}] must be unique

default.paginate.prev=Previous
default.paginate.next=Next
default.boolean.true=True
default.boolean.false=False
default.date.format=yyyy-MM-dd HH:mm:ss z
default.number.format=0

default.created.message={0} {1} created
default.updated.message={0} {1} updated
default.deleted.message={0} {1} deleted
default.not.deleted.message={0} {1} could not be deleted
default.not.found.message={0} not found with id {1}
default.optimistic.locking.failure=Another user has updated this {0} while you were editing

default.home.label=Home
default.list.label={0} List
default.add.label=Add {0}
default.new.label=New {0}
default.create.label=Create {0}
default.show.label=Show {0}
default.edit.label=Edit {0}

default.button.create.label=Create
default.button.edit.label=Edit
default.button.update.label=Update
default.button.delete.label=Delete
default.button.delete.confirm.message=Are you sure?

# Data binding errors. Use "typeMismatch.$className.$propertyName to customize (eg typeMismatch.Book.author)
typeMismatch.java.net.URL=Property {0} must be a valid URL
typeMismatch.java.net.URI=Property {0} must be a valid URI
typeMismatch.java.util.Date=Property {0} must be a valid Date
typeMismatch.java.lang.Double=Property {0} must be a valid number
typeMismatch.java.lang.Integer=Property {0} must be a valid number
typeMismatch.java.lang.Long=Property {0} must be a valid number
typeMismatch.java.lang.Short=Property {0} must be a valid number
typeMismatch.java.math.BigDecimal=Property {0} must be a valid number
typeMismatch.java.math.BigInteger=Property {0} must be a valid number

customerMaster.code.unique.error = PIN/Code already exist

countryInfo.code.unique.error = Country with Code: {2} already exist
countryInfo.name.unique.error = Country with Name: {2} already exist
division.name.unique.error = Division with Name: {2} already exist
district.name.unique.error = District with Name: {2} already exist
thanaUpazilaPouroshova.name.unique.error = Thana/Upazila with Name: {2} already exist
unionInfo.name.unique.error = Union with Name: {2} already exist
territoryConfiguration.name.unique.error = Territory with Name: {2} already exist
territorySubArea.geoLocation.unique.error = Geo Location with Name: {2} already exist
territorySubArea.road.unique.error = Road with Name: {2} already exist

applicationUser.username.unique.error = User Account with User Name: {2} already exist

workflow.menuName.unique.error = Menu with Name: {2} already exist
workflowUserMapping.prioritySequence.unique.error = Priority Sequence {2} already exist
workflowCustomerMapping.customerMaster.unique.error = Customer {2} already exist

productPrice.name.unique.error = Price with Name: {2} already exist

customerCategory.name.unique.error = Customer Category with Name: {2} already exist
customerContactType.name.unique.error = Customer ContactType with Name: {2} already exist
customerPaymentType.name.unique.error = Customer Payment Type with Name: {2} already exist
customerPriority.name.unique.error = Customer Priority with Name: {2} already exist
customerSalesChannel.name.unique.error = Customer Sales Channel with Name: {2} already exist
customerType.name.unique.error = Customer Type with Name: {2} already exist

warehouse.name.unique.error = Inventory with Name: {2} already exist
warehouse.code.unique.error = Inventory with Code: {2} already exist
subWarehouse.name.unique.error = Sub Inventory with Name: {2} already exist
subWarehouseType.name.unique.error = Sub Inventory Type with Name: {2} already exist

distributionPoint.name.unique.error = Distribution Point with Name: {2} already exist

masterProduct.name.unique.error = Master Product with Name: {2} already exist
masterProduct.code.unique.error = Master Product with Code: {2} already exist
mainProduct.name.unique.error = Main Product with Name: {2} already exist
mainProduct.code.unique.error = Main Product with Code: {2} already exist

productPriceProduct.finishProduct.unique.error = Finish Product already exist
customerProductPrice.customerMaster.unique.error = Customer already exist
territorySubAreaProductPrice.territorySubArea.unique.error = Geo Location already exist

productCategory.name.unique.error = Product Category with Name: {2} already exist
productCategory.code.unique.error = Product Category with Code: {2} already exist
pricingCategory.name.unique.error = Partner Type with Name: {2} already exist
pricingCategory.code.unique.error = Partner Type with Code: {2} already exist
productType.name.unique.error = Product Type with Name: {2} already exist
productType.code.unique.error = Product Type with Code: {2} already exist

posCustomer.customerMaster.unique.error = Customer {2} already exist

bank.name.unique.error = Bank with Name: {2} already exist
bank.code.unique.error = Bank with Code: {2} already exist
bankBranch.name.unique.error = Branch with Name: {2} already exist
bankAccount.accountNo.unique.error = Bank Account with Account No: {2} already exist

cashPool.code.unique.error = Cash Pool with Code: {2} already exist
cashPool.name.unique.error = Cash Pool with Name: {2} already exist
cashPool.accountNo.unique.error = Cash Pool with Account No: {2} already exist

depositPool.code.unique.error = Deposit Pool with Code: {2} already exist
depositPool.name.unique.error = Deposit Pool with Name: {2} already exist
depositPool.accountNo.unique.error = Deposit Pool with Account No: {2} already exist

chargeType.name.unique.error = Charge Type with Name: {2} already exist
vatType.name.unique.error = VAT Type with Name: {2} already exist

deliveryTruck.name.unique.error = Delivery Truck with Name: {2} already exist
deliveryTruck.vehicleNumber.unique.error = Delivery Truck with Vehicle No. {2} already exist

discountType.name.unique.error = Discount Type with Name: {2} already exist
distributionPointWarehouse.warehouse.unique.error = Inventory: {2} already assigned
distributionPoint.warehouse.unique.error = Inventory: {2} already assigned
subWarehouse.subWarehouseType.unique.error = Sub Inventory Type: {2} already exist

salesHead.employee.unique.error = The Employee: {2} already has a target for the selected year. Please select a valid employee
yearlySalesTargetByAmount.employee.unique.error = The Employee: {2} already has a target for the selected year. Please select a valid employee
monthlySalesTargetByAmount.employee.unique.error = The Employee: {2} already has a monthly target for the selected year
dailySalesTargetByAmount.employee.unique.error = The Employee: {2} already has a daily target for the selected year

salesHeadByVolume.employee.unique.error = The Employee: {2} already has a target for the selected year. Please select a valid employee
yearlySalesTargetByVolume.employee.unique.error = The Employee: {2} already has a target for the selected year. Please select a valid employee
monthlySalesTargetByVolume.employee.unique.error = The Employee: {2} already has a monthly target for the selected year
dailySalesTargetByVolume.employee.unique.error = The Employee: {2} already has a daily target for the selected year
chartOfAccountsMapping.chartOfAccounts.unique.error = Chart Of Accounts: {2} already occupied

journal.journalNo.unique.error = Journal with No: {2} already exist
invoice.code.unique.error = Invoice with No: {2} already exist
primaryDemandOrder.orderNo.unique.error = Primary Demand Order with Order No: {2} already exist
secondaryDemandOrder.orderNo.unique.error = Secondary Demand Order with Order No: {2} already exist
retailOrder.orderNo.unique.error = Retail Order with Order No: {2} already exist









